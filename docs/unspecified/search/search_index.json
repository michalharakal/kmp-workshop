{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kotlin/Native and Multiplatform Workshop \u00b6 Javaland 2023, Mittwoch 22.03.2023 | 14:30 - 17:30 | Community Room Community activity workshop Michal Harakal, Alexander von Below With the advancement of digitization, the demand for human-machine interface applications in various industrial sectors is also growing. They should not only be safe, reliable and slim \u2013 they should also be modern, good-looking and networked. In this hands-on workshop, we'll build a simple JVM desktop app that communicates with a real device (Arduino) and look at the strengths of Kotlin and Kotlin Multiplatform. We will learn how to easily support multiple platforms (desktop and mobile, especially with a focus on Apple operating systems) without compromising, how Kotlin and the JVM work well together and how declarative UI frameworks, such as Jetpack Compose and Swift UI, are the kind and changing the way responsive user interfaces are designed today. Learning goals \u00b6 How to set up a multiplatform project How to use Kotlin Multiplatform to build a desktop application How to use Kotlin Multiplatform to build a mobile application How to display data from a real device with declarative UI frameworks(Jetpack Compose and Swift UI) Setup the environment \u00b6 See detailed instructions in the setup section. Codelabs \u00b6 Particular learnigs steps are split into separated branches. Setup - Setting up the project Part 1 - Create your first app that works both on Android and iOS with the IDE Part 2 - Add a desktop app to your project Part 3 - Add business logic to your project Part 4 - Show me the data, adding views to your project Part 4 - Add a real device to your project","title":"Kotlin/Native and Multiplatform Workshop"},{"location":"#kotlinnative-and-multiplatform-workshop","text":"Javaland 2023, Mittwoch 22.03.2023 | 14:30 - 17:30 | Community Room Community activity workshop Michal Harakal, Alexander von Below With the advancement of digitization, the demand for human-machine interface applications in various industrial sectors is also growing. They should not only be safe, reliable and slim \u2013 they should also be modern, good-looking and networked. In this hands-on workshop, we'll build a simple JVM desktop app that communicates with a real device (Arduino) and look at the strengths of Kotlin and Kotlin Multiplatform. We will learn how to easily support multiple platforms (desktop and mobile, especially with a focus on Apple operating systems) without compromising, how Kotlin and the JVM work well together and how declarative UI frameworks, such as Jetpack Compose and Swift UI, are the kind and changing the way responsive user interfaces are designed today.","title":"Kotlin/Native and Multiplatform Workshop"},{"location":"#learning-goals","text":"How to set up a multiplatform project How to use Kotlin Multiplatform to build a desktop application How to use Kotlin Multiplatform to build a mobile application How to display data from a real device with declarative UI frameworks(Jetpack Compose and Swift UI)","title":"Learning goals"},{"location":"#setup-the-environment","text":"See detailed instructions in the setup section.","title":"Setup the environment"},{"location":"#codelabs","text":"Particular learnigs steps are split into separated branches. Setup - Setting up the project Part 1 - Create your first app that works both on Android and iOS with the IDE Part 2 - Add a desktop app to your project Part 3 - Add business logic to your project Part 4 - Show me the data, adding views to your project Part 4 - Add a real device to your project","title":"Codelabs"},{"location":"agenda/","text":"Agenda \u00b6 Introduction \u00b6 TBD Setup check \u00b6 TBD Getting started \u00b6 Setting up a multi-module project \u00b6 Setting up the Domain layer module \u00b6 modules threading data access interface interactors use case Setting up the Data module \u00b6 Creating the data models for the Data Layer external source interfaces for the Data layer Creating the Data layer store interface Creating the Data layer Remote Data store Connectors and drivers Creating the central access point for the Data layer Presentation module \u00b6 Setting up the Presentation module data models for the Presentation layer \u00b6 Creating the data models for the Presentation layer Creating the data model mapper for the Presentation layer Creating the presentation state model main screen ViewModel Setting up the Application class \u00b6 Threading implementation Setting up Dependency Injection","title":"Agenda"},{"location":"agenda/#agenda","text":"","title":"Agenda"},{"location":"agenda/#introduction","text":"TBD","title":"Introduction"},{"location":"agenda/#setup-check","text":"TBD","title":"Setup check"},{"location":"agenda/#getting-started","text":"","title":"Getting started"},{"location":"agenda/#setting-up-a-multi-module-project","text":"","title":"Setting up a multi-module project"},{"location":"agenda/#setting-up-the-domain-layer-module","text":"modules threading data access interface interactors use case","title":"Setting up the Domain layer module"},{"location":"agenda/#setting-up-the-data-module","text":"Creating the data models for the Data Layer external source interfaces for the Data layer Creating the Data layer store interface Creating the Data layer Remote Data store Connectors and drivers Creating the central access point for the Data layer","title":"Setting up the Data module"},{"location":"agenda/#presentation-module","text":"Setting up the Presentation module","title":"Presentation module"},{"location":"agenda/#data-models-for-the-presentation-layer","text":"Creating the data models for the Presentation layer Creating the data model mapper for the Presentation layer Creating the presentation state model main screen ViewModel","title":"data models for the Presentation layer"},{"location":"agenda/#setting-up-the-application-class","text":"Threading implementation Setting up Dependency Injection","title":"Setting up the Application class"},{"location":"codelab-1/","text":"Create your first app that works both on Android and iOS with the IDE \u00b6 TBD Result \u00b6 If you want check an expected results, checkout [codelab 1 Branch](( https://github.com/michalharakal/kmp-workshop/tree/javaland2023/codelab-1/javaland2023/codelab/iot-explorer )","title":"Create your first app that works both on Android and iOS with the IDE"},{"location":"codelab-1/#create-your-first-app-that-works-both-on-android-and-ios-with-the-ide","text":"TBD","title":"Create your first app that works both on Android and iOS with the IDE"},{"location":"codelab-1/#result","text":"If you want check an expected results, checkout [codelab 1 Branch](( https://github.com/michalharakal/kmp-workshop/tree/javaland2023/codelab-1/javaland2023/codelab/iot-explorer )","title":"Result"},{"location":"codelab-2/","text":"Add a desktop app to your project \u00b6 You can start directly here by cloning the results from previous step codelab 1 Branch Additional dependencies \u00b6 Compose Multiplatform Result \u00b6 If you want check an expected results, checkout codelab 2 Branch","title":"Add a desktop app to your project"},{"location":"codelab-2/#add-a-desktop-app-to-your-project","text":"You can start directly here by cloning the results from previous step codelab 1 Branch","title":"Add a desktop app to your project"},{"location":"codelab-2/#additional-dependencies","text":"Compose Multiplatform","title":"Additional dependencies"},{"location":"codelab-2/#result","text":"If you want check an expected results, checkout codelab 2 Branch","title":"Result"},{"location":"codelab-3/","text":"Add business logic to your project \u00b6 You can start directly here by cloning the results from previous step codelab 2 Branch Notes on software architecture \u00b6 Blocks in the image are grouped by columns into the following 3 layers: presentation domain data Additional dependencies \u00b6 Couroutines Android Lifecycle for handling in ViewModel Result \u00b6 TBD If you want check an expected results, checkout codelab 3 Branch","title":"Add business logic to your project"},{"location":"codelab-3/#add-business-logic-to-your-project","text":"You can start directly here by cloning the results from previous step codelab 2 Branch","title":"Add business logic to your project"},{"location":"codelab-3/#notes-on-software-architecture","text":"Blocks in the image are grouped by columns into the following 3 layers: presentation domain data","title":"Notes on software architecture"},{"location":"codelab-3/#additional-dependencies","text":"Couroutines Android Lifecycle for handling in ViewModel","title":"Additional dependencies"},{"location":"codelab-3/#result","text":"TBD If you want check an expected results, checkout codelab 3 Branch","title":"Result"},{"location":"codelab-4/","text":"Show me the data, adding views to your project \u00b6 If you want check an expected results, checkout codelab 3 Branch Additional dependencies \u00b6 Jetpack Compose iOS \u00b6 Result \u00b6 If you want check an expected results, checkout codelab 4 Branch","title":"Show me the data, adding views to your project"},{"location":"codelab-4/#show-me-the-data-adding-views-to-your-project","text":"If you want check an expected results, checkout codelab 3 Branch","title":"Show me the data, adding views to your project"},{"location":"codelab-4/#additional-dependencies","text":"Jetpack Compose","title":"Additional dependencies"},{"location":"codelab-4/#ios","text":"","title":"iOS"},{"location":"codelab-4/#result","text":"If you want check an expected results, checkout codelab 4 Branch","title":"Result"},{"location":"codelab-5/","text":"Add a real device to your project \u00b6 If you want check an expected results, checkout codelab 4 Branch Additional dependencies \u00b6 mqtt TBD Result \u00b6 TBD If you want check an expected results, checkout codelab 5 Branch","title":"Add a real device to your project"},{"location":"codelab-5/#add-a-real-device-to-your-project","text":"If you want check an expected results, checkout codelab 4 Branch","title":"Add a real device to your project"},{"location":"codelab-5/#additional-dependencies","text":"mqtt TBD","title":"Additional dependencies"},{"location":"codelab-5/#result","text":"TBD If you want check an expected results, checkout codelab 5 Branch","title":"Result"},{"location":"setup/","text":"Set up an environment \u00b6 Prerequisites \u00b6 Note To write iOS-specific or macOS-specific code and run it as a native iOS or macOS application on a simulated or real device, you'll need a Mac with macOS. This cannot be performed on other operating systems, such as Microsoft Windows. This is an Apple requirement. Install the required software \u00b6 Android Studio \u00b6 Recommended : Current version of Android Studio Android Studio Electric Eel | 2022.1.1 Patch 2 (17.3.2023) IntelliJ Plugin Kotlin Multiplatform Mobile IntelliJ Plugin Compose Multiplatform IDE Support NOTE: Also make sure that Android SDK has been installed. Android SDK can be installed via menu item Tools->Android->SDK Manager IntelliJ IDEA \u00b6 Warning Current version of IntelliJ IDEA will work probably as well, but is not tested yet with this workshop. Hint If you want just try out Compose Multiplatform just with Desktop JVM on IntelliJ IDEA, you can simply follow official guide Guide for getting started with Compose Multiplatform iOS and macOS \u00b6 Xcode 14 or later is required to develop for iOS. A (free) Apple Developer account is required to deploy onto a device. We recommend to install the TouchLab Kotlin Plugin for Xcode by running: brew install xcode-kotlin","title":"Setup"},{"location":"setup/#set-up-an-environment","text":"","title":"Set up an environment"},{"location":"setup/#prerequisites","text":"Note To write iOS-specific or macOS-specific code and run it as a native iOS or macOS application on a simulated or real device, you'll need a Mac with macOS. This cannot be performed on other operating systems, such as Microsoft Windows. This is an Apple requirement.","title":"Prerequisites"},{"location":"setup/#install-the-required-software","text":"","title":"Install the required software"},{"location":"setup/#android-studio","text":"Recommended : Current version of Android Studio Android Studio Electric Eel | 2022.1.1 Patch 2 (17.3.2023) IntelliJ Plugin Kotlin Multiplatform Mobile IntelliJ Plugin Compose Multiplatform IDE Support NOTE: Also make sure that Android SDK has been installed. Android SDK can be installed via menu item Tools->Android->SDK Manager","title":"Android Studio"},{"location":"setup/#intellij-idea","text":"Warning Current version of IntelliJ IDEA will work probably as well, but is not tested yet with this workshop. Hint If you want just try out Compose Multiplatform just with Desktop JVM on IntelliJ IDEA, you can simply follow official guide Guide for getting started with Compose Multiplatform","title":"IntelliJ IDEA"},{"location":"setup/#ios-and-macos","text":"Xcode 14 or later is required to develop for iOS. A (free) Apple Developer account is required to deploy onto a device. We recommend to install the TouchLab Kotlin Plugin for Xcode by running: brew install xcode-kotlin","title":"iOS and macOS"}]}